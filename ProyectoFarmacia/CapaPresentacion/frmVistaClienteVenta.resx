<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Eliminar.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnBuscar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vAAADrwBlbxySQAAA69JREFUWEftVu9PklEY9S/0g5sfcuOLLT/ostn8YpsrNqvZZsUqy9ZstumiGZPE
        ASUOnfgjEAN9SygsGKEiKFI45o9O9zz2mrNayEt9aLGdwfvce59znnOfe3mrqv5/fuNAJBLB7OwsvN5x
        wdiYVxAMBvFHzdM0TQh9vhklIPgDGKcQzqm4kMlJHwi//xUCgRB8Lxdgm3hzCM/0osRlTAlxOl2VE0Fi
        Jp2fX8R0QMNlVwKnnqRhsmVhGtoU8PncUAr2qYjMo0MOh8O4iFAoJJWHw68x6o/izNA6Lo3n4UnuY3Ub
        h5jPAvdDRRF105OQ+RUR4fGMSbK5cBSNDpU8WMS7PH4JZ3wPp4c38ciXgKZF8OKFR7atrJ4gMa1nIsvE
        KhpHC5hZB0Ib37GQA46CY3cWd3HOtYlX2jsRb7VayxPAbmaChaX3OPs8j87wPrxpwKdETGeAmV+gPw6c
        9xbwJLCCaHQZdru9PAFsolgsjgntoyS8ogHulQOMrUHEHAfjjxLAxbld3JrekPXcRvbSibdheNiBeDwB
        39IKLkwVRQCre5YCRlYBlyI7DsZ7YsA1bR+W2S1ZTyfLuqRoXTyexMzbNC6+3MGNqNrfZVVhEhhULgwp
        AcfBsQdK5HUl4M7cJ1lftgCbzSYJluJpmP07Qs7kJBlQLlhVtU+VCB18ZpzjFDCo5ZFKrYFOnth+LqBy
        7h2T3A0XcTv65ZCcpKzerhrxKBiniKvze9ASWVnb29tbngCKcLvdSKczCCe35BSwwUhC0hF15JzqGLq+
        gc+MU+jjSFHW8Q4o+xhSAPuA90AmswHn+6JYa2UTKjISj6pLSQef2YAPI3tYWc9J9X19fejo6CjfAYro
        7++Xbs7ltuBLFmF5/QX33h40IivmVtAZxgdju0hv5GUuxbe3t6O6uhrNzc3GRcRiy8jnPyOTK4iQp8t7
        GIjtC54ndvAhu30wrtwiOSuvra0VVEQE7eTdvraWRqGw/VOwadl0rFwnr6urg8lkQk1NjXEn+MLR3d0t
        jaW/nPDfkhX39PSA28XKWTEF6OT19fVoaGiojAj9TPO1TMfxc849Z8WsXCdvamoSByjMcE+UcrHoZKxc
        J29tbQXx10SQjC5QDH+3tbVJfxCMM1ZKMYbmkJQu6ORms1n6hGCcYgwRlLKYZC0tLdDJOzs70dXVJWDc
        8GVVigiS0gWd3GKxyIkiKKKUHIbnkJTV6uQ8uhTwVxzQ1ZOU1vOboCOGKztpAl5YugsnXfvvz/8KAwLy
        ebSfudMAAAAASUVORK5CYII=
</value>
  </data>
</root>